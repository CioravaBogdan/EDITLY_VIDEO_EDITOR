{
  "name": "🎵 Editly Audio Preserved Video Creator",
  "nodes": [
    {
      "parameters": {},
      "id": "webhook-start",
      "name": "📥 Webhook Start",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "sample-data",
              "name": "sampleData",
              "value": "[\n  {\n    \"audioPath\": \"/app/uploads/files-1753801198963-967848345.mp3\",\n    \"imagePath\": \"/app/uploads/files-1753809979219-248490257.png\"\n  },\n  {\n    \"audioPath\": \"/app/uploads/files-1753801198969-641241060.mp3\",\n    \"imagePath\": \"/app/uploads/files-1753809979224-923577472.png\"\n  },\n  {\n    \"audioPath\": \"/app/uploads/files-1753801198962-600451434.mp3\",\n    \"imagePath\": \"/app/uploads/files-1753809979226-469814619.png\"\n  },\n  {\n    \"imagePath\": \"/app/uploads/files-1753809979230-123456789.png\"\n  }\n]",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "sample-data-node",
      "name": "📋 Sample Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [460, 300]
    },
    {
      "parameters": {
        "jsCode": "// 🎬 EDITLY VIDEO CREATOR - AUDIO PRESERVED (Versiune Simplificată)\n// ✅ Audio păstrat EXACT ca în original - fără modificări de viteză sau durată\n\nconst allPages = $input.all();\n\n// --- 🎯 CONFIGURAȚIE VIDEO ---\nconst VIDEO_CONFIG = {\n  width: 1024,              // Lățimea cerută\n  height: 1536,             // Înălțimea cerută\n  fps: 30,                  // Frame rate pentru calitate maximă\n  baseClipDuration: 8,      // Durată de bază per clip\n  silenceBetween: 2         // Pauză între clipuri\n};\n\n// Procesăm datele de input\nconst testData = JSON.parse($json.sampleData);\n\nconsole.log(`🎬 Procesare carte digitală: ${testData.length} pagini`);\nconsole.log(`📐 Rezoluție video: ${VIDEO_CONFIG.width}x${VIDEO_CONFIG.height}`);\nconsole.log(`🎵 Audio: PĂSTRAT ORIGINAL - fără modificări`);\n\n// 🚀 Creăm array-ul de clipuri pentru Editly\nconst clips = [];\nlet totalEstimatedDuration = 0;\n\n// Procesăm fiecare pagină\ntestData.forEach((item, index) => {\n  const { audioPath, imagePath } = item;\n  \n  // Verificăm că avem imagine (obligatoriu)\n  if (!imagePath) {\n    console.warn(`⚠️ Pagina ${index + 1} nu are imagine - omisă`);\n    return;\n  }\n  \n  // 🎬 Construim clip-ul - CONFIGURAȚIE SPECIALĂ pentru audio neschimbat\n  const clip = {\n    // 🎯 Durată clip = durată de bază (audio-ul se va opri natural)\n    duration: VIDEO_CONFIG.baseClipDuration,\n    \n    layers: [\n      {\n        type: \"image\",\n        path: imagePath,\n        resizeMode: \"cover\"  // Cover pentru a umple ecranul complet\n      }\n    ]\n  };\n  \n  // ✅ Adăugăm audio cu setări SPECIALE pentru păstrarea originală\n  if (audioPath) {\n    clip.layers.push({\n      type: \"audio\", \n      path: audioPath,\n      \n      // 🎯 SETĂRI CRITICE pentru audio neschimbat:\n      mixVolume: 1.0,           // Volum original (100%)\n      \n      // ⚠️ NU setăm 'duration' - lăsăm Editly să folosească durata naturală\n      // ⚠️ NU setăm 'cutFrom' sau 'cutTo' - păstrăm întregul audio\n      // ⚠️ NU setăm 'speedFactor' - ar modifica viteza audio\n      \n      // Audio-ul va rula până la sfârșitul său natural, apoi se oprește\n      // Dacă clipul e mai lung decât audio-ul, rămâne liniște\n      // Dacă audio-ul e mai lung decât clipul, se taie natural\n    });\n    \n    console.log(`🎵 Pagina ${index + 1}: Audio ORIGINAL + imagine ${VIDEO_CONFIG.baseClipDuration}s`);\n  } else {\n    console.log(`🖼️ Pagina ${index + 1}: Doar imagine ${VIDEO_CONFIG.baseClipDuration}s`);\n  }\n  \n  clips.push(clip);\n  \n  // Adăugăm clip de liniște între pagini (doar dacă nu e ultima)\n  if (index < testData.length - 1) {\n    clips.push({\n      duration: VIDEO_CONFIG.silenceBetween,\n      layers: [\n        {\n          type: \"fill-color\",\n          color: \"#000000\"  // Ecran negru pentru pauză\n        }\n      ]\n    });\n    totalEstimatedDuration += VIDEO_CONFIG.baseClipDuration + VIDEO_CONFIG.silenceBetween;\n  } else {\n    totalEstimatedDuration += VIDEO_CONFIG.baseClipDuration;\n  }\n});\n\n// 🎯 Configurația finală Editly - AUDIO COMPLET NESCHIMBAT\nconst editSpec = {\n  // Setări video principale\n  width: VIDEO_CONFIG.width,\n  height: VIDEO_CONFIG.height,\n  fps: VIDEO_CONFIG.fps,\n  \n  // Array-ul de clipuri\n  clips: clips,\n  \n  // 🎵 SETĂRI CRITICE pentru păstrarea audio original\n  fast: false,                    // Calitate maximă\n  keepSourceAudio: true,          // ✅ OBLIGATORIU - păstrează audio original\n  \n  // 🚫 DEZACTIVATE - setări care ar modifica audio-ul:\n  clipsAudioVolume: 1.0,         // Volum 100% original\n  audioNorm: false,              // FĂRĂ normalizare audio\n  outputVolume: 1.0,             // Volum final 100%\n  enableClipsAudioVolume: false, // Dezactivează modificarea volumului\n  \n  // ⚠️ NU setăm backgroundAudioVolume, loopAudio, sau alte setări audio\n  \n  // Setări pentru calitate video\n  videoCodec: \"libx264\",\n  videoBitrate: \"4000k\",         // Bitrate decent pentru 1024x1536\n  audioCodec: \"aac\",\n  audioBitrate: \"192k\",          // Bitrate înalt pentru calitate audio\n  \n  // Fără tranziții (pentru claritate audio)\n  defaults: {\n    transition: null,\n    \n    // Setări default pentru layer-uri\n    layer: {\n      audioNorm: false,      // Fără normalizare pe layer-uri\n      mixVolume: 1.0         // Volum natural pe toate layer-urile\n    }\n  },\n  \n  // 🚀 Argumente FFmpeg OPTIMIZATE pentru audio original\n  customOutputArgs: [\n    // Video encoding - calitate bună\n    \"-c:v\", \"libx264\",\n    \"-preset\", \"medium\",           // Balansat calitate/viteză\n    \"-crf\", \"20\",                  // Calitate foarte bună\n    \"-profile:v\", \"high\",\n    \"-level\", \"4.0\",\n    \"-pix_fmt\", \"yuv420p\",\n    \n    // 🎵 AUDIO ENCODING - PĂSTREAZĂ COMPLET ORIGINAL\n    \"-c:a\", \"aac\",\n    \"-b:a\", \"192k\",               // Bitrate înalt pentru calitate\n    \"-ar\", \"48000\",               // Sample rate înalt\n    \"-ac\", \"2\",                   // Stereo\n    \n    // 🚫 FĂRĂ FILTRE AUDIO care ar modifica sunetul:\n    // NU folosim: -af, -filter:a, -volume, -loudnorm, -dynaudnorm\n    \n    // Optimizări generale\n    \"-movflags\", \"+faststart\",    // Pentru streaming rapid\n    \"-threads\", \"0\"               // Toate cores-urile pentru viteză\n  ],\n  \n  // 🎯 Setări suplimentare pentru controlul strict al audio\n  enableFfmpegStreaming: true,     // Pentru eficiență\n  enableFfmpegMultipass: false,    // Single pass pentru viteză\n  verbose: false,                  // Fără log verbose\n  allowRemoteRequests: false,      // Securitate\n  enableFfmpegLog: false          // Fără log FFmpeg\n};\n\n// 📁 Generăm numele fișierului\nconst timestamp = new Date().toISOString().replace(/[:.]/g, '-').substring(0, 19);\nconst outputFilename = `carte_audio_preserved_${timestamp}.mp4`;\n\n// 📊 Statistici finale\nconst validClips = clips.filter(c => c.layers.some(l => l.type === \"image\")).length;\nconst audioClips = clips.filter(c => c.layers.some(l => l.type === \"audio\")).length;\nconst silenceClips = clips.filter(c => c.layers.some(l => l.type === \"fill-color\")).length;\nconst totalMinutes = Math.floor(totalEstimatedDuration / 60);\nconst totalSeconds = totalEstimatedDuration % 60;\n\nconsole.log(\"\\n📊 === REZUMAT FINAL ===\");\nconsole.log(`✅ Pagini procesate: ${validClips}`);\nconsole.log(`🎵 Pagini cu audio: ${audioClips}`);\nconsole.log(`⏸️ Clipuri de pauză: ${silenceClips}`);\nconsole.log(`⏱️ Durată totală: ${totalMinutes}m ${totalSeconds}s`);\nconsole.log(`📁 Nume fișier: ${outputFilename}`);\nconsole.log(`🎬 Calitate: HD ${VIDEO_CONFIG.width}x${VIDEO_CONFIG.height} @ ${VIDEO_CONFIG.fps}fps`);\nconsole.log(`🔊 Audio: PRESERVED - durată și viteză originală`);\nconsole.log(`📋 Durată per pagină: ${VIDEO_CONFIG.baseClipDuration}s + ${VIDEO_CONFIG.silenceBetween}s pauză`);\n\n// Verificare finală\nif (validClips === 0) {\n  throw new Error(\"❌ Nu există clipuri valide de procesat!\");\n}\n\n// 🎬 Returnăm configurația pentru Editly\nreturn {\n  editSpec: editSpec,\n  outputFilename: outputFilename,\n  stats: {\n    totalPages: validClips,\n    totalDuration: totalEstimatedDuration,\n    withAudio: audioClips,\n    silenceClips: silenceClips,\n    resolution: `${VIDEO_CONFIG.width}x${VIDEO_CONFIG.height}`,\n    quality: \"HD_Audio_Preserved\",\n    audioQuality: \"Original_Unmodified\",\n    clipDuration: VIDEO_CONFIG.baseClipDuration,\n    silenceDuration: VIDEO_CONFIG.silenceBetween\n  }\n};"
      },
      "id": "audio-preserved-processor",
      "name": "🎵 Audio Preserved Processor",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 300]
    },
    {
      "parameters": {
        "url": "http://editly-api:3001/edit",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "editSpec",
              "value": "={{ $json.editSpec }}"
            },
            {
              "name": "outputFilename",
              "value": "={{ $json.outputFilename }}"
            }
          ]
        },
        "options": {
          "timeout": 1800000
        }
      },
      "id": "editly-api-call",
      "name": "🚀 Editly API Call",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [900, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "success-condition",
              "leftValue": "={{ $json.message }}",
              "rightValue": "Video editing completed successfully",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "success-check",
      "name": "✅ Success Check",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1120, 300]
    },
    {
      "parameters": {
        "url": "={{ 'http://editly-api:3001' + $json.downloadUrl }}",
        "options": {
          "timeout": 300000
        }
      },
      "id": "download-video",
      "name": "📥 Download Video",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1340, 240]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "final-result",
              "name": "result",
              "value": "{\n  \"status\": \"success\",\n  \"message\": \"🎵 Video cu audio original creat cu succes!\",\n  \"videoUrl\": \"{{ 'http://localhost:3001' + $('🚀 Editly API Call').item.json.downloadUrl }}\",\n  \"filename\": \"{{ $('🚀 Editly API Call').item.json.outputFilename }}\",\n  \"stats\": {{ $('🎵 Audio Preserved Processor').item.json.stats }},\n  \"audioPreserved\": true,\n  \"qualityNote\": \"Audio păstrat în calitate și viteză originală\"\n}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "id": "success-result",
      "name": "🎉 Success Result",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [1560, 240]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "error-result", 
              "name": "error",
              "value": "{\n  \"status\": \"error\",\n  \"message\": \"❌ Eroare la procesarea video cu audio preserved\",\n  \"details\": \"{{ $json.error || $json.message }}\",\n  \"timestamp\": \"{{ new Date().toISOString() }}\",\n  \"troubleshoot\": \"Verifică căile fișierelor audio și imagine\"\n}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "id": "error-result",
      "name": "❌ Error Result", 
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [1340, 360]
    }
  ],
  "connections": {
    "📥 Webhook Start": {
      "main": [
        [
          {
            "node": "📋 Sample Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "📋 Sample Data": {
      "main": [
        [
          {
            "node": "🎵 Audio Preserved Processor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🎵 Audio Preserved Processor": {
      "main": [
        [
          {
            "node": "🚀 Editly API Call",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🚀 Editly API Call": {
      "main": [
        [
          {
            "node": "✅ Success Check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "✅ Success Check": {
      "main": [
        [
          {
            "node": "📥 Download Video",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "❌ Error Result",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "📥 Download Video": {
      "main": [
        [
          {
            "node": "🎉 Success Result",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-07-29T21:15:00.000Z",
  "versionId": "2"
}